services:
  - type: web
    plan: free
    runtime: image
    name: n8n-service
    image:
      url: docker.io/n8nio/n8n:latest  # later pin to a specific version once stable
    envVars:
      # Core n8n deployment/settings
      - key: N8N_PROTOCOL
        value: "https"
      - key: N8N_HOST
        fromSecret: N8N_HOST
      - key: N8N_EDITOR_BASE_URL
        fromSecret: N8N_HOST
      - key: WEBHOOK_URL
        fromSecret: N8N_HOST

      # Credentials encryption (persisted so you don't lose existing credentials)
      - key: N8N_ENCRYPTION_KEY
        generateValue: true

      # Basic auth (strongly recommended for public-facing instances)
      - key: N8N_BASIC_AUTH_ACTIVE
        value: "true"
      - key: N8N_BASIC_AUTH_USER
        fromSecret: N8N_BASIC_AUTH_USER
      - key: N8N_BASIC_AUTH_PASSWORD
        fromSecret: N8N_BASIC_AUTH_PASSWORD

      # === External Postgres configuration (not Render Postgres) ===
      - key: DB_TYPE
        fromSecret: DB_TYPE 
        
      - key: DB_POSTGRESDB_HOST
        fromSecret: DB_POSTGRESDB_HOST     
       
      - key: DB_POSTGRESDB_PORT
        value: "5432"
       
      - key: DB_POSTGRESDB_DATABASE
        fromSecret: DB_POSTGRESDB_DATABASE  

      - key: DB_POSTGRESDB_USER
        fromSecret: DB_POSTGRESDB_USER 
        
      - key: DB_POSTGRESDB_PASSWORD
        fromSecret: DB_POSTGRESDB_PASSWORD       
